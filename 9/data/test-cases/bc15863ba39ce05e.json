{"uid":"bc15863ba39ce05e","name":"Прокрутка слайдера на главной странице вправо/влево","fullName":"tests.main_page.test_slider.TestMainPageSlider#test_slick_pizza_slider","historyId":"530cc386a752f40388755ff868d326d2","time":{"start":1678722472480,"stop":1678722472480,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: The element reference of <a class=\"cart-contents wcmenucart-contents\" href=\"http://pizzeria.skillbox.cc/cart/\"> is stale; either its node document is not the active document, or it is no longer connected to the DOM\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:180:5\nStaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:461:5\nelement.resolveElement@chrome://remote/content/marionette/element.sys.mjs:509:11\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:206:33\ncloneObject@chrome://remote/content/marionette/json.sys.mjs:56:24\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:213:16\njson.deserialize@chrome://remote/content/marionette/json.sys.mjs:217:10\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:30","statusTrace":"get_driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"1987fb84-d501-4c15-8714-68a84bd14b84\")>\n\n    @pytest.fixture(scope=\"function\")\n    def slider(get_driver):\n        with allure.step(\"Получение слайдера с пиццами\"):\n>           main_page = MainPage(get_driver)\n\nsrc/fixtures/pizza_page_fixtures.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/main_page.py:15: in __init__\n    super().__init__(driver, MAIN_PAGE_URL)\nsrc/pages/top_menu.py:16: in __init__\n    self._cart_text = self.get_cart_text()\nsrc/pages/top_menu.py:25: in get_cart_text\n    cart_text = self.find_element(CommonLocators.cart_locator).text\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:89: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f961e9f8700>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"The element reference of <a class=\\\\\"...sys.mjs:217:10\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:30\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: The element reference of <a class=\"cart-contents wcmenucart-contents\" href=\"http://pizzeria.skillbox.cc/cart/\"> is stale; either its node document is not the active document, or it is no longer connected to the DOM\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:180:5\nE       StaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:461:5\nE       element.resolveElement@chrome://remote/content/marionette/element.sys.mjs:509:11\nE       deserializeJSON@chrome://remote/content/marionette/json.sys.mjs:206:33\nE       cloneObject@chrome://remote/content/marionette/json.sys.mjs:56:24\nE       deserializeJSON@chrome://remote/content/marionette/json.sys.mjs:213:16\nE       json.deserialize@chrome://remote/content/marionette/json.sys.mjs:217:10\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:30\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1678722321455,"stop":1678722321456,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"get_driver","time":{"start":1678722472482,"stop":1678722475532,"duration":3050},"status":"passed","steps":[{"name":"Запуск браузера: firefox","time":{"start":1678722472482,"stop":1678722475532,"duration":3050},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"slider","time":{"start":1678722475532,"stop":1678722478416,"duration":2884},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: The element reference of <a class=\"cart-contents wcmenucart-contents\" href=\"http://pizzeria.skillbox.cc/cart/\"> is stale; either its node document is not the active document, or it is no longer connected to the DOM\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:180:5\nStaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:461:5\nelement.resolveElement@chrome://remote/content/marionette/element.sys.mjs:509:11\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:206:33\ncloneObject@chrome://remote/content/marionette/json.sys.mjs:56:24\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:213:16\njson.deserialize@chrome://remote/content/marionette/json.sys.mjs:217:10\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:30\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 900, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/python-autotests/python-autotests/src/fixtures/pizza_page_fixtures.py\", line 21, in slider\n    main_page = MainPage(get_driver)\n  File \"/home/runner/work/python-autotests/python-autotests/src/pages/main_page.py\", line 15, in __init__\n    super().__init__(driver, MAIN_PAGE_URL)\n  File \"/home/runner/work/python-autotests/python-autotests/src/pages/top_menu.py\", line 16, in __init__\n    self._cart_text = self.get_cart_text()\n  File \"/home/runner/work/python-autotests/python-autotests/src/pages/top_menu.py\", line 25, in get_cart_text\n    cart_text = self.find_element(CommonLocators.cart_locator).text\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 89, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 410, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Получение слайдера с пиццами","time":{"start":1678722475532,"stop":1678722478415,"duration":2883},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: The element reference of <a class=\"cart-contents wcmenucart-contents\" href=\"http://pizzeria.skillbox.cc/cart/\"> is stale; either its node document is not the active document, or it is no longer connected to the DOM\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:180:5\nStaleElementReferenceError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:461:5\nelement.resolveElement@chrome://remote/content/marionette/element.sys.mjs:509:11\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:206:33\ncloneObject@chrome://remote/content/marionette/json.sys.mjs:56:24\ndeserializeJSON@chrome://remote/content/marionette/json.sys.mjs:213:16\njson.deserialize@chrome://remote/content/marionette/json.sys.mjs:217:10\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:30\n\n","statusTrace":"  File \"/home/runner/work/python-autotests/python-autotests/src/fixtures/pizza_page_fixtures.py\", line 21, in slider\n    main_page = MainPage(get_driver)\n  File \"/home/runner/work/python-autotests/python-autotests/src/pages/main_page.py\", line 15, in __init__\n    super().__init__(driver, MAIN_PAGE_URL)\n  File \"/home/runner/work/python-autotests/python-autotests/src/pages/top_menu.py\", line 16, in __init__\n    self._cart_text = self.get_cart_text()\n  File \"/home/runner/work/python-autotests/python-autotests/src/pages/top_menu.py\", line 25, in get_cart_text\n    cart_text = self.find_element(CommonLocators.cart_locator).text\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 89, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 410, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Открытие страницы: http://pizzeria.skillbox.cc/","time":{"start":1678722475544,"stop":1678722478350,"duration":2806},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"afterStages":[{"name":"get_driver::0","time":{"start":1678722478524,"stop":1678722479313,"duration":789},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Слайдер"},{"name":"feature","value":"Главная страница"},{"name":"tag","value":"sanity"},{"name":"parentSuite","value":"tests.main_page"},{"name":"suite","value":"test_slider"},{"name":"subSuite","value":"TestMainPageSlider"},{"name":"host","value":"fv-az453-222"},{"name":"thread","value":"2877-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.main_page.test_slider"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"slick_destination","value":"'slick_next'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["sanity"]},"source":"bc15863ba39ce05e.json","parameterValues":["'slick_next'"]}