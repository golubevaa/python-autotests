{"uid":"359fbabcf3964117","name":"Проверка возможности выбора дополнительной опции","fullName":"tests.pizza_page.test_pizza_pages_add_options.TestPizzaAddOptions#test_select_doping","historyId":"ac580c1f58ea4f384d1ee850cdbdc5eb","time":{"start":1678730698830,"stop":1678730698830,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=110.0.5481.177)\nStacktrace:\n#0 0x55b6e925cd93 <unknown>\n#1 0x55b6e902b2d7 <unknown>\n#2 0x55b6e902e8d3 <unknown>\n#3 0x55b6e902e642 <unknown>\n#4 0x55b6e902e95c <unknown>\n#5 0x55b6e9061cfe <unknown>\n#6 0x55b6e908b5f2 <unknown>\n#7 0x55b6e905c873 <unknown>\n#8 0x55b6e908b81e <unknown>\n#9 0x55b6e90a3619 <unknown>\n#10 0x55b6e908b353 <unknown>\n#11 0x55b6e905ae40 <unknown>\n#12 0x55b6e905c038 <unknown>\n#13 0x55b6e92b08be <unknown>\n#14 0x55b6e92b48f0 <unknown>\n#15 0x55b6e9294f90 <unknown>\n#16 0x55b6e92b5b7d <unknown>\n#17 0x55b6e9286578 <unknown>\n#18 0x55b6e92da348 <unknown>\n#19 0x55b6e92da4d6 <unknown>\n#20 0x55b6e92f4341 <unknown>\n#21 0x7f5ad8112609 start_thread","statusTrace":"get_driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"87e5472ff11e4d0fcbea99691caf7a24\")>\n\n    @pytest.fixture(scope=\"function\")\n    def pizza_page(get_driver):\n        with allure.step(\"Открытие страницы пиццы\"):\n            url = choice(ALL_PIZZA_LINKS)\n>       yield PizzaPage(get_driver, url)\n\nsrc/fixtures/pizza_page_fixtures.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/pages/pizza_page.py:12: in __init__\n    super().__init__(driver, url)\nsrc/pages/top_menu.py:16: in __init__\n    self._cart_text = self.get_cart_text()\nsrc/pages/top_menu.py:25: in get_cart_text\n    cart_text = self.find_element(CommonLocators.cart_locator).text\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:89: in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:410: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:444: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd8f19a4b20>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: element is n...wn>\\\\n#19 0x55b6e92da4d6 \\\\u003Cunknown>\\\\n#20 0x55b6e92f4341 \\\\u003Cunknown>\\\\n#21 0x7f5ad8112609 start_thread\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = \"{}.{}\".format(frame[\"className\"], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\nE         (Session info: chrome=110.0.5481.177)\nE       Stacktrace:\nE       #0 0x55b6e925cd93 <unknown>\nE       #1 0x55b6e902b2d7 <unknown>\nE       #2 0x55b6e902e8d3 <unknown>\nE       #3 0x55b6e902e642 <unknown>\nE       #4 0x55b6e902e95c <unknown>\nE       #5 0x55b6e9061cfe <unknown>\nE       #6 0x55b6e908b5f2 <unknown>\nE       #7 0x55b6e905c873 <unknown>\nE       #8 0x55b6e908b81e <unknown>\nE       #9 0x55b6e90a3619 <unknown>\nE       #10 0x55b6e908b353 <unknown>\nE       #11 0x55b6e905ae40 <unknown>\nE       #12 0x55b6e905c038 <unknown>\nE       #13 0x55b6e92b08be <unknown>\nE       #14 0x55b6e92b48f0 <unknown>\nE       #15 0x55b6e9294f90 <unknown>\nE       #16 0x55b6e92b5b7d <unknown>\nE       #17 0x55b6e9286578 <unknown>\nE       #18 0x55b6e92da348 <unknown>\nE       #19 0x55b6e92da4d6 <unknown>\nE       #20 0x55b6e92f4341 <unknown>\nE       #21 0x7f5ad8112609 start_thread\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:249: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"pytestconfig","time":{"start":1678730446295,"stop":1678730446295,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"get_driver","time":{"start":1678730698831,"stop":1678730699632,"duration":801},"status":"passed","steps":[{"name":"Запуск браузера: chrome","time":{"start":1678730698831,"stop":1678730699632,"duration":801},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":1,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"pizza_page","time":{"start":1678730699632,"stop":1678730702675,"duration":3043},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: element is not attached to the page document\n  (Session info: chrome=110.0.5481.177)\nStacktrace:\n#0 0x55b6e925cd93 <unknown>\n#1 0x55b6e902b2d7 <unknown>\n#2 0x55b6e902e8d3 <unknown>\n#3 0x55b6e902e642 <unknown>\n#4 0x55b6e902e95c <unknown>\n#5 0x55b6e9061cfe <unknown>\n#6 0x55b6e908b5f2 <unknown>\n#7 0x55b6e905c873 <unknown>\n#8 0x55b6e908b81e <unknown>\n#9 0x55b6e90a3619 <unknown>\n#10 0x55b6e908b353 <unknown>\n#11 0x55b6e905ae40 <unknown>\n#12 0x55b6e905c038 <unknown>\n#13 0x55b6e92b08be <unknown>\n#14 0x55b6e92b48f0 <unknown>\n#15 0x55b6e9294f90 <unknown>\n#16 0x55b6e92b5b7d <unknown>\n#17 0x55b6e9286578 <unknown>\n#18 0x55b6e92da348 <unknown>\n#19 0x55b6e92da4d6 <unknown>\n#20 0x55b6e92f4341 <unknown>\n#21 0x7f5ad8112609 start_thread\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1128, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 900, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/python-autotests/python-autotests/src/fixtures/pizza_page_fixtures.py\", line 15, in pizza_page\n    yield PizzaPage(get_driver, url)\n  File \"/home/runner/work/python-autotests/python-autotests/src/pages/pizza_page.py\", line 12, in __init__\n    super().__init__(driver, url)\n  File \"/home/runner/work/python-autotests/python-autotests/src/pages/top_menu.py\", line 16, in __init__\n    self._cart_text = self.get_cart_text()\n  File \"/home/runner/work/python-autotests/python-autotests/src/pages/top_menu.py\", line 25, in get_cart_text\n    cart_text = self.find_element(CommonLocators.cart_locator).text\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 89, in text\n    return self._execute(Command.GET_ELEMENT_TEXT)[\"value\"]\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 410, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 249, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"Открытие страницы пиццы","time":{"start":1678730699632,"stop":1678730699632,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Открытие страницы: http://pizzeria.skillbox.cc/product/%d0%bf%d0%b8%d1%86%d1%86%d0%b0-%d0%b2%d0%b5%d1%82%d1%87%d0%b8%d0%bd%d0%b0-%d0%b8-%d0%b3%d1%80%d0%b8%d0%b1%d1%8b/","time":{"start":1678730699640,"stop":1678730702633,"duration":2993},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"afterStages":[{"name":"get_driver::0","time":{"start":1678730702742,"stop":1678730702819,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"Страницы пицц"},{"name":"story","value":"Дополнительные опции"},{"name":"tag","value":"high_priority"},{"name":"parentSuite","value":"tests.pizza_page"},{"name":"suite","value":"test_pizza_pages_add_options"},{"name":"subSuite","value":"TestPizzaAddOptions"},{"name":"host","value":"fv-az408-963"},{"name":"thread","value":"2951-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.pizza_page.test_pizza_pages_add_options"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"doping_name","value":"'Обычный'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["high_priority"]},"source":"359fbabcf3964117.json","parameterValues":["'Обычный'"]}